#include <iostream>
using namespace std;

// Main login logo
void login_logo ()
{
	cout << "\n ******************************************************\n"
			" *                                                    *\n"
			" *   /$$        /$$$$$$   /$$$$$$  /$$$$$$ /$$   /$$  *\n"
			" *  | $$       /$$__  $$ /$$__  $$|_  $$_/| $$$ | $$  *\n"
			" *  | $$      | $$  \\ $$| $$  \\__/  | $$  | $$$$| $$  *\n"
			" *  | $$      | $$  | $$| $$ /$$$$  | $$  | $$ $$ $$  *\n"
			" *  | $$      | $$  | $$| $$|_  $$  | $$  | $$  $$$$  *\n"
			" *  | $$      | $$  | $$| $$  \\ $$  | $$  | $$\\  $$$  *\n" 
			" *  | $$$$$$$$|  $$$$$$/|  $$$$$$/ /$$$$$$| $$ \\  $$  *\n"   
			" *  |________/ \\______/  \\______/ |______/|__/  \\__/  *\n"
			" *                                                    *\n"   
            " ******************************************************\n\n";
}

// Main Shop logo
void welcome_logo ()
{
	cout << "\n ****************************************************************\n"
			" *                                                              *\n"
			" *   /$$$$$$$$          /$$$$$$  /$$   /$$  /$$$$$$  /$$$$$$$   *\n"
			" *  | $$_____/         /$$__  $$| $$  | $$ /$$__  $$| $$__  $$  *\n"
			" *  | $$              | $$  \\__/| $$  | $$| $$  \\ $$| $$  \\ $$  *\n"
			" *  | $$$$$    /$$$$$$|  $$$$$$ | $$$$$$$$| $$  | $$| $$$$$$$/  *\n"
			" *  | $$__/   |______/ \\____  $$| $$__  $$| $$  | $$| $$____/   *\n"
			" *  | $$               /$$  \\ $$| $$  | $$| $$  | $$| $$        *\n" 
			" *  | $$$$$$$$        |  $$$$$$/| $$  | $$|  $$$$$$/| $$        *\n"   
			" *  |________/         \\______/ |__/  |__/ \\______/ |__/        *\n"
			" *                                                              *\n"   
            " ****************************************************************\n\n";	
}

// Main Salesman logo
void salesman_logo ()
{
	cout << "\n *****************************************************************************************\n"
			" *                                                                                       *\n"
			" *    /$$$$$$   /$$$$$$  /$$       /$$$$$$$$  /$$$$$$  /$$      /$$ /$$$$$$$$ /$$   /$$  *\n"
			" *   /$$__  $$ /$$__  $$| $$      | $$_____/ /$$__  $$| $$$    /$$$| $$_____/| $$$ | $$  *\n"
			" *  | $$  \\__/| $$  \\ $$| $$      | $$      | $$  \\__/| $$$$  /$$$$| $$      | $$$$| $$  *\n"
			" *  |  $$$$$$ | $$$$$$$$| $$      | $$$$$   |  $$$$$$ | $$ $$/$$ $$| $$$$$   | $$ $$ $$  *\n"
			" *   \\____  $$| $$__  $$| $$      | $$__/    \\____  $$| $$  $$$| $$| $$__/   | $$  $$$$  *\n"
			" *   /$$  \\ $$| $$  | $$| $$      | $$       /$$  \\ $$| $$\\  $ | $$| $$      | $$\\  $$$  *\n" 
			" *  |  $$$$$$/| $$  | $$| $$$$$$$$| $$$$$$$$|  $$$$$$/| $$ \\/  | $$| $$$$$$$$| $$ \\  $$  *\n"   
			" *   \\______/ |__/  |__/|________/|________/ \\______/ |__/     |__/|________/|__/  \\__/  *\n"
			" *                                                                                       *\n"   
            " *****************************************************************************************\n\n"  ;
}

// Main Report logo
void report_logo ()
{
	cout << "\n ********************************************************************\n"
			" *                                                                  *\n"
			" *    /$$$$$$$                                            /$$       *\n"
			" *   | $$__  $$                                          | $$       *\n"
			" *   | $$  \\ $$  /$$$$$$   /$$$$$$   /$$$$$$   /$$$$$$  /$$$$$$     *\n"
			" *   | $$$$$$$/ /$$__  $$ /$$__  $$ /$$__  $$ /$$__  $$|_  $$_/     *\n"
			" *   | $$__  $$| $$$$$$$$| $$  \\ $$| $$  \\ $$| $$  \\__/  | $$       *\n"
			" *   | $$  \\ $$| $$_____/| $$  | $$| $$  | $$| $$        | $$ /$$   *\n" 
			" *   | $$  | $$|  $$$$$$$| $$$$$$$/|  $$$$$$/| $$        |  $$$$/   *\n"   
			" *   |__/  |__/ \\_______/| $$____/  \\______/ |__/         \\___/     *\n"
			" *                       | $$                                       *\n"
			" *                       | $$                                       *\n" 
			" *                       |__/                                       *\n" 
			" *                                                                  *\n"    
            " ********************************************************************\n\n"  ;
}

// Main Selling logo
void selling_logo ()
{
	for ( int i=0; i<18; i++ )
	{
		system ( "CLS" );
		for ( int j=0; j<i; j++ )
			cout << "\n";
			
		cout << "\n\t\t\t\t ********************************************\n"
				"\t\t\t\t *                                          *\n"
				"\t\t\t\t *    _____        _  _  _                  *\n"
				"\t\t\t\t *   /  ___|      | || |(_)                 *\n"
				"\t\t\t\t *   \\ `--.   ___ | || | _  _ __    __ _    *\n"
				"\t\t\t\t *    `--. \\ / _ \\| || || || '_ \\  / _` |   *\n"
				"\t\t\t\t *   /\\__/ /|  __/| || || || | | || (_| |   *\n"
				"\t\t\t\t *   \\____/  \\___||_||_||_||_| |_| \\__, |   *\n" 
				"\t\t\t\t *                                  __/ |   *\n"   
				"\t\t\t\t *                                 |___/    *\n"
				"\t\t\t\t *                                          *\n"   
	            "\t\t\t\t ********************************************\n\n";
	}
}

// Main Refilling logo
void refilling_logo ()
{
	for ( int i=0; i<18; i++ )
	{
		system ( "CLS" );
		for ( int j=0; j<i; j++ )
			cout << "\n";
			
		cout << "\n\t\t\t\t ****************************************************\n"
				"\t\t\t\t *                                                  *\n"
				"\t\t\t\t *   ______         __  _  _  _  _                  *\n"
				"\t\t\t\t *   | ___ \\       / _|(_)| || |(_)                 *\n"
				"\t\t\t\t *   | |_/ /  ___ | |_  _ | || | _  _ __    __ _    *\n"
				"\t\t\t\t *   |    /  / _ \\|  _|| || || || || '_ \\  / _` |   *\n"
				"\t\t\t\t *   | |\\ \\ |  __/| |  | || || || || | | || (_| |   *\n"
				"\t\t\t\t *   \\_| \\_| \\___||_|  |_||_||_||_||_| |_| \\__, |   *\n" 
				"\t\t\t\t *                                          __/ |   *\n"   
				"\t\t\t\t *                                         |___/    *\n"
				"\t\t\t\t *                                                  *\n"   
	            "\t\t\t\t ****************************************************\n\n";
	}
}

// Main Stock full logo
void full_stock_logo ()
{
	cout << "\n *************************************************************\n"
			" *                                                           *\n"
			" *    _____  _                 _      ______         _  _    *\n"
			" *   /  ___|| |               | |     |  ___|       | || |   *\n"
			" *   \\ `--. | |_   ___    ___ | | __  | |_    _   _ | || |   *\n"
			" *    `--. \\| __| / _ \\  / __|| |/ /  |  _|  | | | || || |   *\n"
			" *   /\\__/ /| |_ | (_) || (__ |   <   | |    | |_| || || |   *\n"
			" *   \\____/  \\__| \\___/  \\___||_|\\_\\  \\_|     \\__,_||_||_|   *\n" 
			" *                                                           *\n"   
			" *                                                           *\n"  
	        " *************************************************************\n\n";
}

// Hire salesman logo
void hire_logo ()
{
	cout << "\n *************************************************************************************\n"
			" *                                                                                   *\n"
			" *    _   _  _                _____         _                                        *\n"
			" *   | | | |(_)              /  ___|       | |                                       *\n"
			" *   | |_| | _  _ __   ___   \\ `--.   __ _ | |  ___  ___  _ __ ___    __ _  _ __     *\n"
			" *   |  _  || || '__| / _ \\   `--. \\ / _` || | / _ \\/ __|| '_ ` _ \\  / _` || '_ \\    *\n"
			" *   | | | || || |   |  __/  /\\__/ /| (_| || ||  __/\\__ \\| | | | | || (_| || | | |   *\n"
			" *   \\_| |_/|_||_|    \\___|  \\____/  \\__,_||_| \\___||___/|_| |_| |_| \\__,_||_| |_|   *\n" 
			" *                                                                                   *\n"   
			" *                                                                                   *\n"  
	        " *************************************************************************************\n\n";
}

// Fire salesman logo
void fire_logo ()
{
	cout << "\n *************************************************************************************\n"
			" *                                                                                   *\n"
			" *   ______  _                _____         _                                        *\n"
			" *   |  ___|(_)              /  ___|       | |                                       *\n"
			" *   | |_    _  _ __   ___   \\ `--.   __ _ | |  ___  ___  _ __ ___    __ _  _ __     *\n"
			" *   |  _|  | || '__| / _ \\   `--. \\ / _` || | / _ \\/ __|| '_ ` _ \\  / _` || '_ \\    *\n"
			" *   | |    | || |   |  __/  /\\__/ /| (_| || ||  __/\\__ \\| | | | | || (_| || | | |   *\n"
			" *   \\_|    |_||_|    \\___|  \\____/  \\__,_||_| \\___||___/|_| |_| |_| \\__,_||_| |_|   *\n" 
			" *                                                                                   *\n"   
			" *                                                                                   *\n"  
	        " *************************************************************************************\n\n";
}

// Fire all logo
void fire_all_logo ()
{
	cout << "\n *********************************************\n"
			" *                                           *\n"
			" *   ______  _                 ___   _  _    *\n"
			" *   |  ___|(_)               / _ \\ | || |   *\n"
			" *   | |_    _  _ __   ___   / /_\\ \\| || |   *\n"
			" *   |  _|  | || '__| / _ \\  |  _  || || |   *\n"
			" *   | |    | || |   |  __/  | | | || || |   *\n"
			" *   \\_|    |_||_|    \\___|  \\_| |_/|_||_|   *\n" 
			" *                                           *\n"   
			" *                                           *\n"
			" *                                           *\n"   
	        " *********************************************\n\n";
}
